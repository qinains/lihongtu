//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。


//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果


//     重新生成代码，这些更改将会丢失。


// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.42。


// 

namespace BTUCenter.Proxy
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class IncorporateCust_YZ : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback NewCardCustomerInfoExportOperationCompleted;

        private System.Threading.SendOrPostCallback EnterpriseInfoUplodOperationCompleted;

        private System.Threading.SendOrPostCallback setBonusVauleOperationCompleted;

        private System.Threading.SendOrPostCallback IncorporateCustOperationCompleted;

        /// <remarks/>
        public IncorporateCust_YZ()
        {
            this.Url = "http://122.224.110.108/WebService_UserInfor/Service.asmx";
        }

        /// <remarks/>
        public event NewCardCustomerInfoExportCompletedEventHandler NewCardCustomerInfoExportCompleted;

        /// <remarks/>
        public event EnterpriseInfoUplodCompletedEventHandler EnterpriseInfoUplodCompleted;

        /// <remarks/>
        public event setBonusVauleCompletedEventHandler setBonusVauleCompleted;

        /// <remarks/>
        public event IncorporateCustCompletedEventHandler IncorporateCustCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewCardCustomerInfoExport", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NewCardCustomerInfoExport(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType)
        {
            object[] results = this.Invoke("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginNewCardCustomerInfoExport(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndNewCardCustomerInfoExport(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void NewCardCustomerInfoExportAsync(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType)
        {
            this.NewCardCustomerInfoExportAsync(strProvinceID, strSPID, strTimeStamp, XmlInfor, dealType, null);
        }

        /// <remarks/>
        public void NewCardCustomerInfoExportAsync(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType, object userState)
        {
            if ((this.NewCardCustomerInfoExportOperationCompleted == null))
            {
                this.NewCardCustomerInfoExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCardCustomerInfoExportOperationCompleted);
            }
            this.InvokeAsync("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType}, this.NewCardCustomerInfoExportOperationCompleted, userState);
        }

        private void OnNewCardCustomerInfoExportOperationCompleted(object arg)
        {
            if ((this.NewCardCustomerInfoExportCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewCardCustomerInfoExportCompleted(this, new NewCardCustomerInfoExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnterpriseInfoUplod", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EnterpriseInfoUplod(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType)
        {
            object[] results = this.Invoke("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginEnterpriseInfoUplod(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndEnterpriseInfoUplod(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void EnterpriseInfoUplodAsync(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType)
        {
            this.EnterpriseInfoUplodAsync(strProvinceID, SPID, strTimeStamp, CorporationID, CustID, UserAccount, CorporationName, CorporationType, null);
        }

        /// <remarks/>
        public void EnterpriseInfoUplodAsync(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType, object userState)
        {
            if ((this.EnterpriseInfoUplodOperationCompleted == null))
            {
                this.EnterpriseInfoUplodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterpriseInfoUplodOperationCompleted);
            }
            this.InvokeAsync("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType}, this.EnterpriseInfoUplodOperationCompleted, userState);
        }

        private void OnEnterpriseInfoUplodOperationCompleted(object arg)
        {
            if ((this.EnterpriseInfoUplodCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EnterpriseInfoUplodCompleted(this, new EnterpriseInfoUplodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setBonusVaule", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string setBonusVaule(string strAccountNO, string strCustID, int lBonusVaule)
        {
            object[] results = this.Invoke("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    lBonusVaule});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginsetBonusVaule(string strAccountNO, string strCustID, int lBonusVaule, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    lBonusVaule}, callback, asyncState);
        }

        /// <remarks/>
        public string EndsetBonusVaule(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void setBonusVauleAsync(string strAccountNO, string strCustID, int lBonusVaule)
        {
            this.setBonusVauleAsync(strAccountNO, strCustID, lBonusVaule, null);
        }

        /// <remarks/>
        public void setBonusVauleAsync(string strAccountNO, string strCustID, int lBonusVaule, object userState)
        {
            if ((this.setBonusVauleOperationCompleted == null))
            {
                this.setBonusVauleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBonusVauleOperationCompleted);
            }
            this.InvokeAsync("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    lBonusVaule}, this.setBonusVauleOperationCompleted, userState);
        }

        private void OnsetBonusVauleOperationCompleted(object arg)
        {
            if ((this.setBonusVauleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setBonusVauleCompleted(this, new setBonusVauleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IncorporateCust", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string IncorporateCust(string IncorporateCustRequest)
        {
            object[] results = this.Invoke("IncorporateCust", new object[] {
                    IncorporateCustRequest});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginIncorporateCust(string IncorporateCustRequest, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IncorporateCust", new object[] {
                    IncorporateCustRequest}, callback, asyncState);
        }

        /// <remarks/>
        public string EndIncorporateCust(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void IncorporateCustAsync(string IncorporateCustRequest)
        {
            this.IncorporateCustAsync(IncorporateCustRequest, null);
        }

        /// <remarks/>
        public void IncorporateCustAsync(string IncorporateCustRequest, object userState)
        {
            if ((this.IncorporateCustOperationCompleted == null))
            {
                this.IncorporateCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncorporateCustOperationCompleted);
            }
            this.InvokeAsync("IncorporateCust", new object[] {
                    IncorporateCustRequest}, this.IncorporateCustOperationCompleted, userState);
        }

        private void OnIncorporateCustOperationCompleted(object arg)
        {
            if ((this.IncorporateCustCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncorporateCustCompleted(this, new IncorporateCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void NewCardCustomerInfoExportCompletedEventHandler(object sender, NewCardCustomerInfoExportCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NewCardCustomerInfoExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal NewCardCustomerInfoExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void EnterpriseInfoUplodCompletedEventHandler(object sender, EnterpriseInfoUplodCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EnterpriseInfoUplodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal EnterpriseInfoUplodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void setBonusVauleCompletedEventHandler(object sender, setBonusVauleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setBonusVauleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal setBonusVauleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void IncorporateCustCompletedEventHandler(object sender, IncorporateCustCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncorporateCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal IncorporateCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}