//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// 此源代码由 wsdl 自动生成, Version=2.0.50727.42。
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
public partial class NewCardCustomerInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback NewCardCustomerInfoExportOperationCompleted;
    
    private System.Threading.SendOrPostCallback EnterpriseInfoUplodOperationCompleted;
    
    private System.Threading.SendOrPostCallback setBonusVauleOperationCompleted;
    
    private System.Threading.SendOrPostCallback restorationBonusOperationCompleted;
    
    private System.Threading.SendOrPostCallback IncorporateCustOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetOperatorAreaOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetPermissionsMenuOperationCompleted;
    
    /// <remarks/>
    public NewCardCustomerInfoService()
    {
        this.Url = "http://122.224.110.107/WebService_UserInfor/Service.asmx";
    }
    
    /// <remarks/>
    public event NewCardCustomerInfoExportCompletedEventHandler NewCardCustomerInfoExportCompleted;
    
    /// <remarks/>
    public event EnterpriseInfoUplodCompletedEventHandler EnterpriseInfoUplodCompleted;
    
    /// <remarks/>
    public event setBonusVauleCompletedEventHandler setBonusVauleCompleted;
    
    /// <remarks/>
    public event restorationBonusCompletedEventHandler restorationBonusCompleted;
    
    /// <remarks/>
    public event IncorporateCustCompletedEventHandler IncorporateCustCompleted;
    
    /// <remarks/>
    public event LoginCompletedEventHandler LoginCompleted;
    
    /// <remarks/>
    public event GetOperatorAreaCompletedEventHandler GetOperatorAreaCompleted;
    
    /// <remarks/>
    public event GetPermissionsMenuCompletedEventHandler GetPermissionsMenuCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/NewCardCustomerInfoExport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string NewCardCustomerInfoExport(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType) {
        object[] results = this.Invoke("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginNewCardCustomerInfoExport(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndNewCardCustomerInfoExport(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void NewCardCustomerInfoExportAsync(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType) {
        this.NewCardCustomerInfoExportAsync(strProvinceID, strSPID, strTimeStamp, XmlInfor, dealType, null);
    }
    
    /// <remarks/>
    public void NewCardCustomerInfoExportAsync(string strProvinceID, string strSPID, string strTimeStamp, string XmlInfor, string dealType, object userState) {
        if ((this.NewCardCustomerInfoExportOperationCompleted == null)) {
            this.NewCardCustomerInfoExportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewCardCustomerInfoExportOperationCompleted);
        }
        this.InvokeAsync("NewCardCustomerInfoExport", new object[] {
                    strProvinceID,
                    strSPID,
                    strTimeStamp,
                    XmlInfor,
                    dealType}, this.NewCardCustomerInfoExportOperationCompleted, userState);
    }
    
    private void OnNewCardCustomerInfoExportOperationCompleted(object arg) {
        if ((this.NewCardCustomerInfoExportCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.NewCardCustomerInfoExportCompleted(this, new NewCardCustomerInfoExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EnterpriseInfoUplod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string EnterpriseInfoUplod(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType) {
        object[] results = this.Invoke("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginEnterpriseInfoUplod(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndEnterpriseInfoUplod(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void EnterpriseInfoUplodAsync(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType) {
        this.EnterpriseInfoUplodAsync(strProvinceID, SPID, strTimeStamp, CorporationID, CustID, UserAccount, CorporationName, CorporationType, null);
    }
    
    /// <remarks/>
    public void EnterpriseInfoUplodAsync(string strProvinceID, string SPID, string strTimeStamp, string CorporationID, string CustID, string UserAccount, string CorporationName, string CorporationType, object userState) {
        if ((this.EnterpriseInfoUplodOperationCompleted == null)) {
            this.EnterpriseInfoUplodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterpriseInfoUplodOperationCompleted);
        }
        this.InvokeAsync("EnterpriseInfoUplod", new object[] {
                    strProvinceID,
                    SPID,
                    strTimeStamp,
                    CorporationID,
                    CustID,
                    UserAccount,
                    CorporationName,
                    CorporationType}, this.EnterpriseInfoUplodOperationCompleted, userState);
    }
    
    private void OnEnterpriseInfoUplodOperationCompleted(object arg) {
        if ((this.EnterpriseInfoUplodCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.EnterpriseInfoUplodCompleted(this, new EnterpriseInfoUplodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/setBonusVaule", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string setBonusVaule(string strAccountNO, string strCustID, int AccountType, int lBonusVaule) {
        object[] results = this.Invoke("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    AccountType,
                    lBonusVaule});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetBonusVaule(string strAccountNO, string strCustID, int AccountType, int lBonusVaule, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    AccountType,
                    lBonusVaule}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndsetBonusVaule(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void setBonusVauleAsync(string strAccountNO, string strCustID, int AccountType, int lBonusVaule) {
        this.setBonusVauleAsync(strAccountNO, strCustID, AccountType, lBonusVaule, null);
    }
    
    /// <remarks/>
    public void setBonusVauleAsync(string strAccountNO, string strCustID, int AccountType, int lBonusVaule, object userState) {
        if ((this.setBonusVauleOperationCompleted == null)) {
            this.setBonusVauleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetBonusVauleOperationCompleted);
        }
        this.InvokeAsync("setBonusVaule", new object[] {
                    strAccountNO,
                    strCustID,
                    AccountType,
                    lBonusVaule}, this.setBonusVauleOperationCompleted, userState);
    }
    
    private void OnsetBonusVauleOperationCompleted(object arg) {
        if ((this.setBonusVauleCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setBonusVauleCompleted(this, new setBonusVauleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/restorationBonus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string restorationBonus(int ilBonusResultID, string sstrOldCustID, string sstrNewCustID, int lBonusVaule) {
        object[] results = this.Invoke("restorationBonus", new object[] {
                    ilBonusResultID,
                    sstrOldCustID,
                    sstrNewCustID,
                    lBonusVaule});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginrestorationBonus(int ilBonusResultID, string sstrOldCustID, string sstrNewCustID, int lBonusVaule, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("restorationBonus", new object[] {
                    ilBonusResultID,
                    sstrOldCustID,
                    sstrNewCustID,
                    lBonusVaule}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndrestorationBonus(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void restorationBonusAsync(int ilBonusResultID, string sstrOldCustID, string sstrNewCustID, int lBonusVaule) {
        this.restorationBonusAsync(ilBonusResultID, sstrOldCustID, sstrNewCustID, lBonusVaule, null);
    }
    
    /// <remarks/>
    public void restorationBonusAsync(int ilBonusResultID, string sstrOldCustID, string sstrNewCustID, int lBonusVaule, object userState) {
        if ((this.restorationBonusOperationCompleted == null)) {
            this.restorationBonusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestorationBonusOperationCompleted);
        }
        this.InvokeAsync("restorationBonus", new object[] {
                    ilBonusResultID,
                    sstrOldCustID,
                    sstrNewCustID,
                    lBonusVaule}, this.restorationBonusOperationCompleted, userState);
    }
    
    private void OnrestorationBonusOperationCompleted(object arg) {
        if ((this.restorationBonusCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.restorationBonusCompleted(this, new restorationBonusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IncorporateCust", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string IncorporateCust(string IncorporateCustRequest) {
        object[] results = this.Invoke("IncorporateCust", new object[] {
                    IncorporateCustRequest});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginIncorporateCust(string IncorporateCustRequest, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("IncorporateCust", new object[] {
                    IncorporateCustRequest}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndIncorporateCust(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void IncorporateCustAsync(string IncorporateCustRequest) {
        this.IncorporateCustAsync(IncorporateCustRequest, null);
    }
    
    /// <remarks/>
    public void IncorporateCustAsync(string IncorporateCustRequest, object userState) {
        if ((this.IncorporateCustOperationCompleted == null)) {
            this.IncorporateCustOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncorporateCustOperationCompleted);
        }
        this.InvokeAsync("IncorporateCust", new object[] {
                    IncorporateCustRequest}, this.IncorporateCustOperationCompleted, userState);
    }
    
    private void OnIncorporateCustOperationCompleted(object arg) {
        if ((this.IncorporateCustCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.IncorporateCustCompleted(this, new IncorporateCustCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool Login(string operatorId, string pass) {
        object[] results = this.Invoke("Login", new object[] {
                    operatorId,
                    pass});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogin(string operatorId, string pass, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Login", new object[] {
                    operatorId,
                    pass}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void LoginAsync(string operatorId, string pass) {
        this.LoginAsync(operatorId, pass, null);
    }
    
    /// <remarks/>
    public void LoginAsync(string operatorId, string pass, object userState) {
        if ((this.LoginOperationCompleted == null)) {
            this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
        }
        this.InvokeAsync("Login", new object[] {
                    operatorId,
                    pass}, this.LoginOperationCompleted, userState);
    }
    
    private void OnLoginOperationCompleted(object arg) {
        if ((this.LoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOperatorArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetOperatorArea(string operatorId) {
        object[] results = this.Invoke("GetOperatorArea", new object[] {
                    operatorId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetOperatorArea(string operatorId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetOperatorArea", new object[] {
                    operatorId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetOperatorArea(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetOperatorAreaAsync(string operatorId) {
        this.GetOperatorAreaAsync(operatorId, null);
    }
    
    /// <remarks/>
    public void GetOperatorAreaAsync(string operatorId, object userState) {
        if ((this.GetOperatorAreaOperationCompleted == null)) {
            this.GetOperatorAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOperatorAreaOperationCompleted);
        }
        this.InvokeAsync("GetOperatorArea", new object[] {
                    operatorId}, this.GetOperatorAreaOperationCompleted, userState);
    }
    
    private void OnGetOperatorAreaOperationCompleted(object arg) {
        if ((this.GetOperatorAreaCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetOperatorAreaCompleted(this, new GetOperatorAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPermissionsMenu", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string GetPermissionsMenu(string operatorId) {
        object[] results = this.Invoke("GetPermissionsMenu", new object[] {
                    operatorId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetPermissionsMenu(string operatorId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetPermissionsMenu", new object[] {
                    operatorId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndGetPermissionsMenu(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void GetPermissionsMenuAsync(string operatorId) {
        this.GetPermissionsMenuAsync(operatorId, null);
    }
    
    /// <remarks/>
    public void GetPermissionsMenuAsync(string operatorId, object userState) {
        if ((this.GetPermissionsMenuOperationCompleted == null)) {
            this.GetPermissionsMenuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermissionsMenuOperationCompleted);
        }
        this.InvokeAsync("GetPermissionsMenu", new object[] {
                    operatorId}, this.GetPermissionsMenuOperationCompleted, userState);
    }
    
    private void OnGetPermissionsMenuOperationCompleted(object arg) {
        if ((this.GetPermissionsMenuCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetPermissionsMenuCompleted(this, new GetPermissionsMenuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void NewCardCustomerInfoExportCompletedEventHandler(object sender, NewCardCustomerInfoExportCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class NewCardCustomerInfoExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal NewCardCustomerInfoExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void EnterpriseInfoUplodCompletedEventHandler(object sender, EnterpriseInfoUplodCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EnterpriseInfoUplodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal EnterpriseInfoUplodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void setBonusVauleCompletedEventHandler(object sender, setBonusVauleCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class setBonusVauleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal setBonusVauleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void restorationBonusCompletedEventHandler(object sender, restorationBonusCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class restorationBonusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal restorationBonusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void IncorporateCustCompletedEventHandler(object sender, IncorporateCustCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class IncorporateCustCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal IncorporateCustCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetOperatorAreaCompletedEventHandler(object sender, GetOperatorAreaCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetOperatorAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetOperatorAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void GetPermissionsMenuCompletedEventHandler(object sender, GetPermissionsMenuCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetPermissionsMenuCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetPermissionsMenuCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
